#include <stdio.h>
#include <string.h>
#include <iostream>

struct Node 
{
 char word[40]; 
 int count;
 Node *next; 
 };
typedef Node *PNode; //указатель на узел

PNode Head = NULL;

PNode CreateNode ( char NewWord[] ) //создание нового узла с контентом NewWord
{
 PNode NewNode = new Node; 
 strcpy(NewNode->word, NewWord); 
 NewNode->count = 1; 
 NewNode->next = NULL; 
 return NewNode; 
} 

void AddFirst (PNode &Head, PNode NewNode) //добавление новой головы NewNode, старая смещается
{
 NewNode->next = Head;
 Head = NewNode;
}

void AddAfter (PNode p, PNode NewNode) //добавление узла NewNode после узла с адресом р
{
 NewNode->next = p->next;
 p->next = NewNode;
}

void AddBefore(PNode &Head, PNode p, PNode NewNode) //добавление узла NewNode перед узлом с адресом р
{
    PNode q = Head;
    if (Head == p) 
    {
        AddFirst(Head, NewNode); 
        return;
    }
    while (q && q->next!=p) // ищем узел, за которым следует p
    {
        q = q->next;
    }
    if ( q ) // если нашли такой узел,
    {
        AddAfter(q, NewNode); // добавить новый после него
    }
}

void AddLast(PNode &Head, PNode NewNode) //добавить в конец узел NewNode
{
    PNode q = Head;
    if (Head == NULL)  // если список пуст,
    {
        AddFirst(Head, NewNode); // вставляем первый элемент
        return;
    }
    while (q->next) q = q->next; // ищем последний элемент
        AddAfter(q, NewNode);
} 

PNode Find (PNode Head, char NewWord[]) //поиск адреса узла с контентом NewWord
{
 PNode q = Head;
 while (q && strcmp(q->word, NewWord))
 q = q->next;
 return q;
}

PNode FindPlace (PNode Head, char NewWord[]) //поиск адреса узла, по алф предшевств узлу с контентом NewWord
{
 PNode q = Head;
 while (q && (strcmp(q->word, NewWord) > 0))
 q = q->next;
 return q;
} 

void FillList()
{
    
}

int main()
{
    setlocale(0, "");
    
    AddLast ( Head, CreateNode("Демидов") );
    AddLast ( Head, CreateNode("Морев") );
    AddLast ( Head, CreateNode("Котяшов") );
    AddFirst ( Head, CreateNode("Тупейко") );
    AddFirst ( Head, CreateNode("Ризванов") );
    AddFirst ( Head, CreateNode("Фурсов") );
    AddAfter ( Head, CreateNode("Галяткин") );
    AddAfter ( Head, CreateNode("Матуленко"));
    AddAfter ( Head, CreateNode("Слющенков") );
    AddFirst ( Head, CreateNode("Губин") );
    AddFirst ( Head, CreateNode("Волошин") );
    AddFirst ( Head, CreateNode("Косаченко") );
    
    PNode p = Head; 
    
    while ( p != NULL )  // пока не дошли до конца
    {
        std::cout<< p->word<<"\n";
        p = p->next; // переходим к следующему узлу
    } 
    
    std::cout<< "\nНашлась!!!\n"<<Find ( Head, "Тупейко")->word;
    
    return 0;
}
